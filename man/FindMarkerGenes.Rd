% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindMarkerGenes.R
\name{FindMarkerGenes}
\alias{FindMarkerGenes}
\title{Finds marker genes at each hierarchical level specified by the tree, using the GE matrix
provided in the ref_bpcells parameter, and the celltype labels provided in the input to ref_metadata. It
identifies marker genes by using a function provided in the BPCells package,
marker_features, which finds genes using the Wilcoxon test.}
\usage{
FindMarkerGenes(
  ref_bpcells,
  ref_metadata,
  tree,
  n_genes = 50,
  metadata_cluster_column = "cell_type",
  metadata_cell_label_column = "cellid",
  n_cells_sampled = 500
)
}
\arguments{
\item{ref_bpcells}{A GE reference dataset in BPCells format.}

\item{ref_metadata}{A dataframe with metadata that includes a column providing
celltype labels used for classification and a column providing cell ids.}

\item{tree}{A tree structure (in treedata format) to find marker genes for. Will find marker genes
that distinguish pairs of classes at each level of the hierarchy.}

\item{n_genes}{Number of marker genes, per pairwise class, you want to find.}

\item{metadata_cluster_column}{The name of the column in the metadata giving the celltype labels.}

\item{metadata_cell_label_column}{The name of the column in the metadata giving the cell IDs.}

\item{n_cells_sampled}{Number of cells per class used to find marker genes.}
}
\value{
A list providing marker genes that distinguish each pairwise combination of celltypes, at each
level of the hierarchy in the tree you provided.
}
\description{
Finds marker genes at each hierarchical level specified by the tree, using the GE matrix
provided in the ref_bpcells parameter, and the celltype labels provided in the input to ref_metadata. It
identifies marker genes by using a function provided in the BPCells package,
marker_features, which finds genes using the Wilcoxon test.
}
\examples{
data("train_ex_data_bpcells")
data("train_ex_metadata")
data("test_ex_data_bpcells")
data("test_ex_metadata")
possible_cell_classes = train_ex_metadata$seurat_annotations \%>\% unique()
equal_tree = CreateEqualTree(cell_labels = possible_cell_classes)
marker_genes = FindMarkerGenes(ref_bpcells = train_ex_data_bpcells, ref_metadata = train_ex_metadata, tree = equal_tree, metadata_cluster_column = "seurat_annotations", metadata_cell_label_column = "cell_label")
}
